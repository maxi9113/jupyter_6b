{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "27acee0b-7d5e-4d04-b5ae-a01fcc802fd4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n"
     ]
    }
   ],
   "source": [
    "cadena = \"HOLA MUNDO\"\n",
    "result = cadena.isupper()\n",
    "print(result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "d8b428bf-3890-44ec-99fe-b4ca7c611760",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n"
     ]
    }
   ],
   "source": [
    "cadena = \"hola 4\"\n",
    "result = cadena.islower()\n",
    "print(result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "cb213a29-1c35-47ed-9c8b-dbde2bc3e364",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "La tiene caracteres que no son numericas\n"
     ]
    }
   ],
   "source": [
    "cadena = \"Hola ju43it0\"\n",
    "if cadena.istitle():\n",
    "  print(\"Ok solo tiene letras del alfabeto\")\n",
    "else:\n",
    "  print(\"La tiene caracteres que no son numericas\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "6a20bcdb-23c9-46e9-ba35-c0b597393f9e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "La tiene caracteres que no son del alfabeto\n"
     ]
    }
   ],
   "source": [
    "cadena = \"Hola123\"\n",
    "if cadena.isalpha():\n",
    "  print(\"Ok solo tiene letras del alfabeto\")\n",
    "else:\n",
    "  print(\"La tiene caracteres que no son del alfabeto\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "1cff3ea0-6e51-4219-864f-9d6c0ccc79b1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "carlos come helado\n"
     ]
    }
   ],
   "source": [
    "palabra_1=\"pepe come helado\"\n",
    "palabra_2=\"carlos\"\n",
    "print(palabra_1.replace(\"pepe\",palabra_2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "b76d9711-3d9e-4d95-99a4-1dc1d5f7fb57",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "santi come helado\n"
     ]
    }
   ],
   "source": [
    "palabra_1 = 'santi come '\n",
    "palabra_2 = 'helado'\n",
    "nombre_completo = palabra_1 + palabra_2\n",
    "print(nombre_completo)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "39353d84-1299-4a47-a8fa-260e26d8b6fd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "santi tapa mucho  pepe  en el futbol.\n"
     ]
    }
   ],
   "source": [
    "palabra_1 = 'santi tapa mucho '\n",
    "palabra_2 = 'en el futbol.'\n",
    "nombre_completo = f\"{palabra_1} pepe  {palabra_2}\"\n",
    "print(nombre_completo)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "da1002ef-9937-4a83-9630-0a08698c7b08",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "El resultado obtenido es:  le gane a mi papa en el fifa en una final de la champion league con el psg\n"
     ]
    }
   ],
   "source": [
    "palabra = \"le gane a mi papa en el fifa EN uNA FINAL DE LA CHAMPION LEAGUE CON EL PSG\"\n",
    "\n",
    "nueva_palabra = palabra.lower()\n",
    "\n",
    "print(\"El resultado obtenido es: \",nueva_palabra)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "0eaf5245-e393-4179-8677-dbd77927d822",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "La longitud de la frase es:  62\n"
     ]
    }
   ],
   "source": [
    "mensaje = \"Los ni√±os prefieran el helado de chocolate mas que el de fresa\" # Se guarda la frase en la variable mensaje\n",
    "\n",
    "longitud = len(mensaje) # Se calcula la longitud de la frase y se guarda el resultado en la variable longitud\n",
    "\n",
    "print(\"La longitud de la frase es: \",longitud) # Se imprime el total de caracteres de la frase ..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "f1a8f1b0-6549-4ab7-8f63-017cea3491c9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "El resultado obtenido es:  AYER COMI HELADO DE CHOCOLATE\n"
     ]
    }
   ],
   "source": [
    "palabra = \"ayer comi helado de chocolate\"\n",
    "\n",
    "nueva_palabra = palabra.upper()\n",
    "\n",
    "print(\"El resultado obtenido es: \",nueva_palabra)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "36a42fb0-e57a-4303-b861-34390b87f898",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "El resultado obtenido es:  GOL DE CABEZA\n"
     ]
    }
   ],
   "source": [
    "palabra = \"gol de cabeZa\"\n",
    "\n",
    "nueva_palabra = palabra.upper()\n",
    "\n",
    "print(\"El resultado obtenido es: \",nueva_palabra)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "a782ae84-ca85-4681-a96e-9002d8cbbce2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "El resultado obtenido es:  Valeta es un buen portero\n"
     ]
    }
   ],
   "source": [
    "palabra = \"valeta es un buen portero\"\n",
    "\n",
    "nueva_palabra = palabra.capitalize()\n",
    "\n",
    "print(\"El resultado obtenido es: \",nueva_palabra)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "429ae948-4e9d-4f76-891f-b0bb4e809a1a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "El resultado obtenido es:  Gol de messi\n"
     ]
    }
   ],
   "source": [
    "palabra = \"gol DE MESSI\"\n",
    "\n",
    "nueva_palabra = palabra.capitalize()\n",
    "\n",
    "print(\"El resultado obtenido es: \",nueva_palabra)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.18"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
